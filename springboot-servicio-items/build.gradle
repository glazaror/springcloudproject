plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.glazaror.springboot.app.items'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// dependencia netflix-ribbon
	// implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
	
	// dependencia spring cloud discovery eureka client.. esta dependencia incluye ribbon... por lo tanto incluir ribbon es opcional
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	// dependencia spring cloud hystrix para tolerancia a fallos
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	
	// dependencia cliente spring cloud config... con este dependencia ya se marca automaticamente el microservicio como un cliente del servidor config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	
	// dependencia spring cloud actuator para poder refrescar los @Value mediante un endpoint de actuator... sin necesidad de reiniciar los microservicios
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	// dependencia de libreria commons
	implementation group: 'com.glazaror.springboot.app.commons', name: 'springboot-servicio-commons', version: '0.0.1-SNAPSHOT'
}

// gestor de dependencias spring cloud
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}