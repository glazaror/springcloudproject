spring.application.name=servicio-items
server.port=8002

#ribbon: indicamos la lista de servidores/puertos del servicio que se desea acceder, en este caso el servicio: servicio-productos
#el formato es: nombreservicio.ribbon.listOfServers
#Con ribbon ahora balancearemos el acceso al servicio: accediendo al mas adecuado servidor/puerto
#En este paso aun seguimos acoplados con el servidor/puerto, sin embargo ahora lo tenemos en un archivo de configuracion y ya no en el codigo fuente.
#Con eureka (servidor de nombres) ya abstraemos completamente (100%) la ubicacion de los servidores/puertos de nuestra aplicacion.
# servicio-productos.ribbon.listOfServers=localhost:8001,localhost:9001

# indicamos la ubicacion del servidor/puerto del servidor eureka
# Con Eureka desacoplamos totalmente la ubicacion fisica, toda comunicacion es a traves del nombre del servicio "spring.application.name"
# cada instancia de la aplicacion (ya sea en la nube o en un servidor local) debe registrarse con el servidor eureka
# cada instancia debe enviar un latido de corazon (heartbeat) al servidor para indicar que esta habilitado y para proveerle su informacion (por ejemplo: ubicacion fisica, ip, puerto, nombre de la maquina, etc)
# una vez registrado entonces el servidor eureka le devuelve el registro completo de los demas microservicios y despues cada 30 segundos cada cliente envia esta señal para indicar que todavia esta activo
# si es que un servicio deja de emitir esta señal por 90 segundos entonces automaticamente es eliminado del registro de eureka
# y despues cuando se vuelve a activar se habilita en el registro de eureka despues de 3 señales (es decir despues de 90 segundos)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka