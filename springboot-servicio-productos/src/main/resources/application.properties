spring.application.name=servicio-productos
# El puerto ahora sera dinamico/automatico (valor random), sera asignado por la aplicacion y sera un puerto que este disponible
server.port=${PORT:0}

# Cada vez que ejecutemos la aplicacion se generara una instancia distinta en un puerto distinto
# cuando se consuma el servicio "servicio-productos" el sistema siempre seleccionara la mejor instancia
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# indicamos la ubicacion del servidor/puerto del servidor eureka
# Con Eureka desacoplamos totalmente la ubicacion fisica, toda comunicacion es a traves del nombre del servicio "spring.application.name"
# cada instancia de la aplicacion (ya sea en la nube o en un servidor local) debe registrarse con el servidor eureka
# cada instancia debe enviar un latido de corazon (heartbeat) al servidor para indicar que esta habilitado y para proveerle su informacion (por ejemplo: ubicacion fisica, ip, puerto, nombre de la maquina, etc)
# una vez registrado entonces el servidor eureka le devuelve el registro completo de los demas microservicios y despues cada 30 segundos cada cliente envia esta señal para indicar que todavia esta activo
# si es que un servicio deja de emitir esta señal por 90 segundos entonces automaticamente es eliminado del registro de eureka
# y despues cuando se vuelve a activar se habilita en el registro de eureka despues de 3 señales (es decir despues de 90 segundos)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka