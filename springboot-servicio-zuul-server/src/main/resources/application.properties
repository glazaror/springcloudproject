spring.application.name=servicio-zuul-server
# Zuul debe tener un puerto fijo y este debe estar disponible
# Zuul es el gateway (puerta de entrada) a nuestra aplicacion
# Con Zuul ahora se accede siempre a nuestros microservicios a traves de esta puerta de enlace
# Con esta puerta de enlace ya no se tiene la necesidad de acceder a cada microservicio por separado
# Zuul es un microservicio especial, el cual se encarga de acceder al resto de microservicios
# Caracteristicas: 
# 1. Enrutamiento dinamico (a cada uno de los microservicios registrados en eureka),
# 2. Incluye balanceo de carga (ribbon)... cada petición pasa por balanceo de carga por default
# 3. Incluye filtros, por ejemplo un filtro para dar seguridad a nuestra aplicación. En vez de configurar seguridad (spring-security) en cada microservicio de forma separada
#	 lo configuramos una sola vez en la puerta de enlace (en Zuul). Damos seguridad a nuestras distintas rutas.
# 4. Monitorizacion de metricas, tolerancia a errores 
server.port=8090

# Especificamos la ruta hacia eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Con Zuul podemos configurar la ruta dinamica de cada microservicio
# formato de la ruta: zuul.routes.{nombre-ruta}.service-id=nombre
# Por ejemplo la ruta para el servicio de productos:
# Aqui especificamos la ruta productos que apunte al microservicio "servicio-productos"
zuul.routes.productos.service-id=servicio-productos
# Ahora asignamos la ruta (path) de los endpoints del microservicio productos
# Por ejemplo todos los endpoints del microservicio "servicio-productos" tendran el prefijo "/api/productos/**"
# Cualquier endpoint del microservicio "servicio-productos" se mapea al prefijo "/api/productos"
zuul.routes.productos.path=/api/productos/**

# Lo mismo aplicamos para el microservicio de items
zuul.routes.items.service-id=servicio-items
zuul.routes.items.path=/api/items/**